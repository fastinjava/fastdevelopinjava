<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastdevelopinjava.service.system.mapper.ApiInfoDOMapper">
    <resultMap id="BaseResultMap" type="com.fastdevelopinjava.service.system.model.ApiInfoDO">
        <!--@mbg.generated-->
        <!--@Table api_info-->
        <id column="api_id" jdbcType="INTEGER" property="apiId"/>
        <result column="api_code" jdbcType="VARCHAR" property="apiCode"/>
        <result column="api_name" jdbcType="VARCHAR" property="apiName"/>
        <result column="api_desc" jdbcType="VARCHAR" property="apiDesc"/>
        <result column="app_id" jdbcType="INTEGER" property="appId"/>
        <result column="need_auth" jdbcType="VARCHAR" property="needAuth"/>
        <result column="delete_flag" jdbcType="VARCHAR" property="deleteFlag"/>
        <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="api_url" jdbcType="VARCHAR" property="apiUrl"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        api_id, api_code, api_name, api_desc, app_id, need_auth, delete_flag, creat_time,
        update_time, api_url
    </sql>
    <select id="selectByExample" parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDOExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from api_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from api_info
        where api_id = #{apiId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from api_info
        where api_id = #{apiId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDOExample">
        <!--@mbg.generated-->
        delete from api_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="api_id" keyProperty="apiId"
            parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into api_info (api_code, api_name, api_desc,
        app_id, need_auth, delete_flag,
        creat_time, update_time, api_url
        )
        values (#{apiCode,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, #{apiDesc,jdbcType=VARCHAR},
        #{appId,jdbcType=INTEGER}, #{needAuth,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=VARCHAR},
        #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{apiUrl,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="api_id" keyProperty="apiId"
            parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into api_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiCode != null">
                api_code,
            </if>
            <if test="apiName != null">
                api_name,
            </if>
            <if test="apiDesc != null">
                api_desc,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="needAuth != null">
                need_auth,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="creatTime != null">
                creat_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="apiUrl != null">
                api_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="apiCode != null">
                #{apiCode,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=INTEGER},
            </if>
            <if test="needAuth != null">
                #{needAuth,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="apiUrl != null">
                #{apiUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDOExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from api_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update api_info
        <set>
            <if test="record.apiId != null">
                api_id = #{record.apiId,jdbcType=INTEGER},
            </if>
            <if test="record.apiCode != null">
                api_code = #{record.apiCode,jdbcType=VARCHAR},
            </if>
            <if test="record.apiName != null">
                api_name = #{record.apiName,jdbcType=VARCHAR},
            </if>
            <if test="record.apiDesc != null">
                api_desc = #{record.apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.appId != null">
                app_id = #{record.appId,jdbcType=INTEGER},
            </if>
            <if test="record.needAuth != null">
                need_auth = #{record.needAuth,jdbcType=VARCHAR},
            </if>
            <if test="record.deleteFlag != null">
                delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="record.creatTime != null">
                creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.apiUrl != null">
                api_url = #{record.apiUrl,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update api_info
        set api_id = #{record.apiId,jdbcType=INTEGER},
        api_code = #{record.apiCode,jdbcType=VARCHAR},
        api_name = #{record.apiName,jdbcType=VARCHAR},
        api_desc = #{record.apiDesc,jdbcType=VARCHAR},
        app_id = #{record.appId,jdbcType=INTEGER},
        need_auth = #{record.needAuth,jdbcType=VARCHAR},
        delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        api_url = #{record.apiUrl,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO">
        <!--@mbg.generated-->
        update api_info
        <set>
            <if test="apiCode != null">
                api_code = #{apiCode,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                api_name = #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                api_desc = #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=INTEGER},
            </if>
            <if test="needAuth != null">
                need_auth = #{needAuth,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                creat_time = #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="apiUrl != null">
                api_url = #{apiUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where api_id = #{apiId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO">
        <!--@mbg.generated-->
        update api_info
        set api_code = #{apiCode,jdbcType=VARCHAR},
        api_name = #{apiName,jdbcType=VARCHAR},
        api_desc = #{apiDesc,jdbcType=VARCHAR},
        app_id = #{appId,jdbcType=INTEGER},
        need_auth = #{needAuth,jdbcType=VARCHAR},
        delete_flag = #{deleteFlag,jdbcType=VARCHAR},
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        api_url = #{apiUrl,jdbcType=VARCHAR}
        where api_id = #{apiId,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update api_info
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="api_code = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.apiCode,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="api_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.apiName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="api_desc = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.apiDesc,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="app_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.appId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="need_auth = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.needAuth,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="delete_flag = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.deleteFlag,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="creat_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.creatTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="api_url = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when api_id = #{item.apiId,jdbcType=INTEGER} then #{item.apiUrl,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where api_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.apiId,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="api_id" keyProperty="apiId" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into api_info
        (api_code, api_name, api_desc, app_id, need_auth, delete_flag, creat_time, update_time,
        api_url)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.apiCode,jdbcType=VARCHAR}, #{item.apiName,jdbcType=VARCHAR}, #{item.apiDesc,jdbcType=VARCHAR},
            #{item.appId,jdbcType=INTEGER}, #{item.needAuth,jdbcType=VARCHAR}, #{item.deleteFlag,jdbcType=VARCHAR},
            #{item.creatTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.apiUrl,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="api_id" keyProperty="apiId"
            parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into api_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                api_id,
            </if>
            api_code,
            api_name,
            api_desc,
            app_id,
            need_auth,
            delete_flag,
            creat_time,
            update_time,
            api_url,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                #{apiId,jdbcType=INTEGER},
            </if>
            #{apiCode,jdbcType=VARCHAR},
            #{apiName,jdbcType=VARCHAR},
            #{apiDesc,jdbcType=VARCHAR},
            #{appId,jdbcType=INTEGER},
            #{needAuth,jdbcType=VARCHAR},
            #{deleteFlag,jdbcType=VARCHAR},
            #{creatTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
            #{apiUrl,jdbcType=VARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="apiId != null">
                api_id = #{apiId,jdbcType=INTEGER},
            </if>
            api_code = #{apiCode,jdbcType=VARCHAR},
            api_name = #{apiName,jdbcType=VARCHAR},
            api_desc = #{apiDesc,jdbcType=VARCHAR},
            app_id = #{appId,jdbcType=INTEGER},
            need_auth = #{needAuth,jdbcType=VARCHAR},
            delete_flag = #{deleteFlag,jdbcType=VARCHAR},
            creat_time = #{creatTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            api_url = #{apiUrl,jdbcType=VARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="api_id" keyProperty="apiId"
            parameterType="com.fastdevelopinjava.service.system.model.ApiInfoDO" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into api_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                api_id,
            </if>
            <if test="apiCode != null">
                api_code,
            </if>
            <if test="apiName != null">
                api_name,
            </if>
            <if test="apiDesc != null">
                api_desc,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="needAuth != null">
                need_auth,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="creatTime != null">
                creat_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="apiUrl != null">
                api_url,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiId != null">
                #{apiId,jdbcType=INTEGER},
            </if>
            <if test="apiCode != null">
                #{apiCode,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=INTEGER},
            </if>
            <if test="needAuth != null">
                #{needAuth,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="apiUrl != null">
                #{apiUrl,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="apiId != null">
                api_id = #{apiId,jdbcType=INTEGER},
            </if>
            <if test="apiCode != null">
                api_code = #{apiCode,jdbcType=VARCHAR},
            </if>
            <if test="apiName != null">
                api_name = #{apiName,jdbcType=VARCHAR},
            </if>
            <if test="apiDesc != null">
                api_desc = #{apiDesc,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                app_id = #{appId,jdbcType=INTEGER},
            </if>
            <if test="needAuth != null">
                need_auth = #{needAuth,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="creatTime != null">
                creat_time = #{creatTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="apiUrl != null">
                api_url = #{apiUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
</mapper>
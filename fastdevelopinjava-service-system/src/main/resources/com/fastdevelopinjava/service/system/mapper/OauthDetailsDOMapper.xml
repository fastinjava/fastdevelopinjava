<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastdevelopinjava.service.system.mapper.OauthDetailsDOMapper">
    <resultMap id="BaseResultMap" type="com.fastdevelopinjava.service.system.model.OauthDetailsDO">
        <!--@mbg.generated-->
        <!--@Table oauth_client_details-->
        <result column="client_id" jdbcType="VARCHAR" property="clientId"/>
        <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds"/>
        <result column="client_secret" jdbcType="VARCHAR" property="clientSecret"/>
        <result column="scope" jdbcType="VARCHAR" property="scope"/>
        <result column="authorized_grant_types" jdbcType="VARCHAR" property="authorizedGrantTypes"/>
        <result column="web_server_redirect_uri" jdbcType="VARCHAR" property="webServerRedirectUri"/>
        <result column="authorities" jdbcType="VARCHAR" property="authorities"/>
        <result column="access_token_validity" jdbcType="INTEGER" property="accessTokenValidity"/>
        <result column="refresh_token_validity" jdbcType="INTEGER" property="refreshTokenValidity"/>
        <result column="additional_information" jdbcType="VARCHAR" property="additionalInformation"/>
        <result column="autoapprove" jdbcType="VARCHAR" property="autoapprove"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="delete_flag" jdbcType="VARCHAR" property="deleteFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        client_id, resource_ids, client_secret, `scope`, authorized_grant_types, web_server_redirect_uri,
        authorities, access_token_validity, refresh_token_validity, additional_information,
        autoapprove, `status`, delete_flag, create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDOExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from oauth_client_details
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDOExample">
        <!--@mbg.generated-->
        delete from oauth_client_details
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDO">
        <!--@mbg.generated-->
        insert into oauth_client_details (client_id, resource_ids, client_secret,
        `scope`, authorized_grant_types, web_server_redirect_uri,
        authorities, access_token_validity, refresh_token_validity,
        additional_information, autoapprove, `status`,
        delete_flag, create_time, update_time
        )
        values (#{clientId,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR},
        #{scope,jdbcType=VARCHAR}, #{authorizedGrantTypes,jdbcType=VARCHAR}, #{webServerRedirectUri,jdbcType=VARCHAR},
        #{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER},
        #{refreshTokenValidity,jdbcType=INTEGER},
        #{additionalInformation,jdbcType=VARCHAR}, #{autoapprove,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
        #{deleteFlag,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDO">
        <!--@mbg.generated-->
        insert into oauth_client_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                client_id,
            </if>
            <if test="resourceIds != null">
                resource_ids,
            </if>
            <if test="clientSecret != null">
                client_secret,
            </if>
            <if test="scope != null">
                `scope`,
            </if>
            <if test="authorizedGrantTypes != null">
                authorized_grant_types,
            </if>
            <if test="webServerRedirectUri != null">
                web_server_redirect_uri,
            </if>
            <if test="authorities != null">
                authorities,
            </if>
            <if test="accessTokenValidity != null">
                access_token_validity,
            </if>
            <if test="refreshTokenValidity != null">
                refresh_token_validity,
            </if>
            <if test="additionalInformation != null">
                additional_information,
            </if>
            <if test="autoapprove != null">
                autoapprove,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null">
                #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="clientSecret != null">
                #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="scope != null">
                #{scope,jdbcType=VARCHAR},
            </if>
            <if test="authorizedGrantTypes != null">
                #{authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="webServerRedirectUri != null">
                #{webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="authorities != null">
                #{authorities,jdbcType=VARCHAR},
            </if>
            <if test="accessTokenValidity != null">
                #{accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="refreshTokenValidity != null">
                #{refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="additionalInformation != null">
                #{additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="autoapprove != null">
                #{autoapprove,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDOExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from oauth_client_details
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update oauth_client_details
        <set>
            <if test="record.clientId != null">
                client_id = #{record.clientId,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceIds != null">
                resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="record.clientSecret != null">
                client_secret = #{record.clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="record.scope != null">
                `scope` = #{record.scope,jdbcType=VARCHAR},
            </if>
            <if test="record.authorizedGrantTypes != null">
                authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="record.webServerRedirectUri != null">
                web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="record.authorities != null">
                authorities = #{record.authorities,jdbcType=VARCHAR},
            </if>
            <if test="record.accessTokenValidity != null">
                access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="record.refreshTokenValidity != null">
                refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="record.additionalInformation != null">
                additional_information = #{record.additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="record.autoapprove != null">
                autoapprove = #{record.autoapprove,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.deleteFlag != null">
                delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update oauth_client_details
        set client_id = #{record.clientId,jdbcType=VARCHAR},
        resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
        client_secret = #{record.clientSecret,jdbcType=VARCHAR},
        `scope` = #{record.scope,jdbcType=VARCHAR},
        authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
        web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
        authorities = #{record.authorities,jdbcType=VARCHAR},
        access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
        refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
        additional_information = #{record.additionalInformation,jdbcType=VARCHAR},
        autoapprove = #{record.autoapprove,jdbcType=VARCHAR},
        `status` = #{record.status,jdbcType=VARCHAR},
        delete_flag = #{record.deleteFlag,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into oauth_client_details
        (client_id, resource_ids, client_secret, `scope`, authorized_grant_types, web_server_redirect_uri,
        authorities, access_token_validity, refresh_token_validity, additional_information,
        autoapprove, `status`, delete_flag, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.clientId,jdbcType=VARCHAR}, #{item.resourceIds,jdbcType=VARCHAR},
            #{item.clientSecret,jdbcType=VARCHAR},
            #{item.scope,jdbcType=VARCHAR}, #{item.authorizedGrantTypes,jdbcType=VARCHAR},
            #{item.webServerRedirectUri,jdbcType=VARCHAR}, #{item.authorities,jdbcType=VARCHAR},
            #{item.accessTokenValidity,jdbcType=INTEGER}, #{item.refreshTokenValidity,jdbcType=INTEGER},
            #{item.additionalInformation,jdbcType=VARCHAR}, #{item.autoapprove,jdbcType=VARCHAR},
            #{item.status,jdbcType=VARCHAR}, #{item.deleteFlag,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDO">
        <!--@mbg.generated-->
        insert into oauth_client_details
        (client_id, resource_ids, client_secret, `scope`, authorized_grant_types, web_server_redirect_uri,
        authorities, access_token_validity, refresh_token_validity, additional_information,
        autoapprove, `status`, delete_flag, create_time, update_time)
        values
        (#{clientId,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR},
        #{scope,jdbcType=VARCHAR}, #{authorizedGrantTypes,jdbcType=VARCHAR}, #{webServerRedirectUri,jdbcType=VARCHAR},
        #{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER},
        #{refreshTokenValidity,jdbcType=INTEGER},
        #{additionalInformation,jdbcType=VARCHAR}, #{autoapprove,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
        #{deleteFlag,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
        on duplicate key update
        client_id = #{clientId,jdbcType=VARCHAR},
        resource_ids = #{resourceIds,jdbcType=VARCHAR},
        client_secret = #{clientSecret,jdbcType=VARCHAR},
        `scope` = #{scope,jdbcType=VARCHAR},
        authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
        web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
        authorities = #{authorities,jdbcType=VARCHAR},
        access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
        refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
        additional_information = #{additionalInformation,jdbcType=VARCHAR},
        autoapprove = #{autoapprove,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=VARCHAR},
        delete_flag = #{deleteFlag,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="com.fastdevelopinjava.service.system.model.OauthDetailsDO">
        <!--@mbg.generated-->
        insert into oauth_client_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                client_id,
            </if>
            <if test="resourceIds != null">
                resource_ids,
            </if>
            <if test="clientSecret != null">
                client_secret,
            </if>
            <if test="scope != null">
                `scope`,
            </if>
            <if test="authorizedGrantTypes != null">
                authorized_grant_types,
            </if>
            <if test="webServerRedirectUri != null">
                web_server_redirect_uri,
            </if>
            <if test="authorities != null">
                authorities,
            </if>
            <if test="accessTokenValidity != null">
                access_token_validity,
            </if>
            <if test="refreshTokenValidity != null">
                refresh_token_validity,
            </if>
            <if test="additionalInformation != null">
                additional_information,
            </if>
            <if test="autoapprove != null">
                autoapprove,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="clientId != null">
                #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null">
                #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="clientSecret != null">
                #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="scope != null">
                #{scope,jdbcType=VARCHAR},
            </if>
            <if test="authorizedGrantTypes != null">
                #{authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="webServerRedirectUri != null">
                #{webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="authorities != null">
                #{authorities,jdbcType=VARCHAR},
            </if>
            <if test="accessTokenValidity != null">
                #{accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="refreshTokenValidity != null">
                #{refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="additionalInformation != null">
                #{additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="autoapprove != null">
                #{autoapprove,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="clientId != null">
                client_id = #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null">
                resource_ids = #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="clientSecret != null">
                client_secret = #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="scope != null">
                `scope` = #{scope,jdbcType=VARCHAR},
            </if>
            <if test="authorizedGrantTypes != null">
                authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="webServerRedirectUri != null">
                web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="authorities != null">
                authorities = #{authorities,jdbcType=VARCHAR},
            </if>
            <if test="accessTokenValidity != null">
                access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="refreshTokenValidity != null">
                refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="additionalInformation != null">
                additional_information = #{additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="autoapprove != null">
                autoapprove = #{autoapprove,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
</mapper>
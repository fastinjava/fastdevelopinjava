<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastdevelopinjava.service.ucenter.mapper.UserDOMapper">
  <resultMap id="BaseResultMap" type="com.fastdevelopinjava.service.ucenter.model.UserDO">
    <!--@mbg.generated-->
    <!--@Table user-->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_user_id" jdbcType="INTEGER" property="createdUserId" />
    <result column="updated_user_id" jdbcType="INTEGER" property="updatedUserId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, user_name, `password`, user_nick_name, user_email, delete_flag, updated_time, 
    created_user_id, updated_user_id, created_time
  </sql>
  <select id="selectByExample" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDOExample">
    <!--@mbg.generated-->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (user_name, `password`, user_nick_name, 
      user_email, delete_flag, updated_time, 
      created_user_id, updated_user_id, created_time
      )
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userNickName,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=INTEGER}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{createdUserId,jdbcType=INTEGER}, #{updatedUserId,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="userNickName != null">
        user_nick_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdUserId != null">
        created_user_id,
      </if>
      <if test="updatedUserId != null">
        updated_user_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null">
        #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=INTEGER},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickName != null">
        user_nick_name = #{record.userNickName,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUserId != null">
        created_user_id = #{record.createdUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedUserId != null">
        updated_user_id = #{record.updatedUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      user_nick_name = #{record.userNickName,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      created_user_id = #{record.createdUserId,jdbcType=INTEGER},
      updated_user_id = #{record.updatedUserId,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null">
        created_user_id = #{createdUserId,jdbcType=INTEGER},
      </if>
      <if test="updatedUserId != null">
        updated_user_id = #{updatedUserId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO">
    <!--@mbg.generated-->
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_user_id = #{createdUserId,jdbcType=INTEGER},
      updated_user_id = #{updatedUserId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.userName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_nick_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.userNickName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.userEmail,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="delete_flag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.deleteFlag,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="updated_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.updatedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="created_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.createdUserId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="updated_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.updatedUserId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=INTEGER} then #{item.createdTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="user_id" keyProperty="userId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    (user_name, `password`, user_nick_name, user_email, delete_flag, updated_time, created_user_id, 
      updated_user_id, created_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.userNickName,jdbcType=VARCHAR}, 
        #{item.userEmail,jdbcType=VARCHAR}, #{item.deleteFlag,jdbcType=INTEGER}, #{item.updatedTime,jdbcType=TIMESTAMP}, 
        #{item.createdUserId,jdbcType=INTEGER}, #{item.updatedUserId,jdbcType=INTEGER}, 
        #{item.createdTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="user_id" keyProperty="userId" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      user_name,
      `password`,
      user_nick_name,
      user_email,
      delete_flag,
      updated_time,
      created_user_id,
      updated_user_id,
      created_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      #{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{userNickName,jdbcType=VARCHAR},
      #{userEmail,jdbcType=VARCHAR},
      #{deleteFlag,jdbcType=INTEGER},
      #{updatedTime,jdbcType=TIMESTAMP},
      #{createdUserId,jdbcType=INTEGER},
      #{updatedUserId,jdbcType=INTEGER},
      #{createdTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_user_id = #{createdUserId,jdbcType=INTEGER},
      updated_user_id = #{updatedUserId,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.fastdevelopinjava.service.ucenter.model.UserDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="userNickName != null">
        user_nick_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdUserId != null">
        created_user_id,
      </if>
      <if test="updatedUserId != null">
        updated_user_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null">
        #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=INTEGER},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null">
        created_user_id = #{createdUserId,jdbcType=INTEGER},
      </if>
      <if test="updatedUserId != null">
        updated_user_id = #{updatedUserId,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>